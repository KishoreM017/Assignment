{"ast":null,"code":"var _jsxFileName = \"/Users/vipl19-20063/Desktop/react-interview/src/App.js\";\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport SQLFrom from '../src/components/SQLFrom/SQLFrom';\nimport TableData from '../src/components/TableData/TableData';\nimport QueryToggle from '../src/components/QueryToggle/QueryToggle';\nimport { sqlData } from '../src/utils/utils';\n\nconst App = props => {\n  const [queryData, setQueryData] = useState({});\n  const textAreaRef = useRef(null);\n\n  const getSelectedQuery = query => {\n    sqlData.forEach(el => {\n      var _textAreaRef$current, _textAreaRef$current$;\n\n      if (el.query.toLowerCase() === (textAreaRef === null || textAreaRef === void 0 ? void 0 : (_textAreaRef$current = textAreaRef.current) === null || _textAreaRef$current === void 0 ? void 0 : (_textAreaRef$current$ = _textAreaRef$current.value) === null || _textAreaRef$current$ === void 0 ? void 0 : _textAreaRef$current$.trim().toLowerCase())) {\n        selectedQuery = el;\n      }\n    });\n  };\n\n  const handleFromSubmit = e => {\n    var _textAreaRef$current2, _textAreaRef$current3;\n\n    e.preventDefault();\n    let selectedQuery = getSelectedQuery(textAreaRef === null || textAreaRef === void 0 ? void 0 : (_textAreaRef$current2 = textAreaRef.current) === null || _textAreaRef$current2 === void 0 ? void 0 : (_textAreaRef$current3 = _textAreaRef$current2.value) === null || _textAreaRef$current3 === void 0 ? void 0 : _textAreaRef$current3.trim().toLowerCase());\n\n    if (selectedQuery) {\n      setQueryData(selectedQuery);\n    } else {\n      //input query does not match then taking default zeroth index table data\n      setQueryData(sqlData[0]);\n    }\n  };\n\n  const handleQueryChange = query => {\n    let selectedQuery = {};\n    sqlData.forEach(el => {\n      if (el.query.toLowerCase() === query.trim().toLowerCase()) {\n        selectedQuery = el;\n      }\n    });\n\n    if (selectedQuery) {\n      setQueryData(selectedQuery);\n    } else {\n      //input query does not match then taking default zeroth index table data\n      setQueryData(sqlData[0]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SQLFrom, {\n    textAreaRef: textAreaRef,\n    handleFromSubmit: handleFromSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(QueryToggle, {\n    sqlData: sqlData,\n    handleQueryChange: handleQueryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TableData, {\n    tableData: queryData === null || queryData === void 0 ? void 0 : queryData.tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vipl19-20063/Desktop/react-interview/src/App.js"],"names":["React","useRef","useState","SQLFrom","TableData","QueryToggle","sqlData","App","props","queryData","setQueryData","textAreaRef","getSelectedQuery","query","forEach","el","toLowerCase","current","value","trim","selectedQuery","handleFromSubmit","e","preventDefault","handleQueryChange","tableData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMS,WAAW,GAAGV,MAAM,CAAC,IAAD,CAA1B;;AAEA,QAAMW,gBAAgB,GAAIC,KAAD,IAAU;AACjCP,IAAAA,OAAO,CAACQ,OAAR,CAAgBC,EAAE,IAAI;AAAA;;AACpB,UAAGA,EAAE,CAACF,KAAH,CAASG,WAAT,QAA2BL,WAA3B,aAA2BA,WAA3B,+CAA2BA,WAAW,CAAEM,OAAxC,kFAA2B,qBAAsBC,KAAjD,0DAA2B,sBAA6BC,IAA7B,GAAoCH,WAApC,EAA3B,CAAH,EAAgF;AAC9EI,QAAAA,aAAa,GAAGL,EAAhB;AACD;AACF,KAJD;AAKD,GAND;;AAQA,QAAMM,gBAAgB,GAAIC,CAAD,IAAM;AAAA;;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIH,aAAa,GAAGR,gBAAgB,CAACD,WAAD,aAACA,WAAD,gDAACA,WAAW,CAAEM,OAAd,mFAAC,sBAAsBC,KAAvB,0DAAC,sBAA6BC,IAA7B,GAAoCH,WAApC,EAAD,CAApC;;AAEA,QAAGI,aAAH,EAAiB;AACfV,MAAAA,YAAY,CAACU,aAAD,CAAZ;AACD,KAFD,MAEK;AACH;AACAV,MAAAA,YAAY,CAACJ,OAAO,CAAC,CAAD,CAAR,CAAZ;AACD;AACF,GAVD;;AAYA,QAAMkB,iBAAiB,GAAIX,KAAD,IAAU;AAClC,QAAIO,aAAa,GAAG,EAApB;AACAd,IAAAA,OAAO,CAACQ,OAAR,CAAgBC,EAAE,IAAI;AACpB,UAAGA,EAAE,CAACF,KAAH,CAASG,WAAT,OAA2BH,KAAK,CAACM,IAAN,GAAaH,WAAb,EAA9B,EAAyD;AACvDI,QAAAA,aAAa,GAAGL,EAAhB;AACD;AACF,KAJD;;AAKA,QAAGK,aAAH,EAAiB;AACfV,MAAAA,YAAY,CAACU,aAAD,CAAZ;AACD,KAFD,MAEK;AACH;AACAV,MAAAA,YAAY,CAACJ,OAAO,CAAC,CAAD,CAAR,CAAZ;AACD;AACF,GAbD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,OAAD;AACA,IAAA,WAAW,EAAEK,WADb;AAEA,IAAA,gBAAgB,EAAEU,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,eAKK,oBAAC,WAAD;AACA,IAAA,OAAO,EAAEf,OADT;AAEA,IAAA,iBAAiB,EAAEkB,iBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALL,eASK,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEf,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEgB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATL,CADJ;AAaD,CAtDD;;AAyDA,eAAelB,GAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport SQLFrom from '../src/components/SQLFrom/SQLFrom';\nimport TableData from '../src/components/TableData/TableData';\nimport QueryToggle from '../src/components/QueryToggle/QueryToggle';\nimport { sqlData } from '../src/utils/utils';\n\nconst App = props => {\n\n  const [queryData, setQueryData] = useState({});\n\n  const textAreaRef = useRef(null);\n\n  const getSelectedQuery = (query) =>{\n    sqlData.forEach(el => {\n      if(el.query.toLowerCase() === textAreaRef?.current?.value?.trim().toLowerCase()){\n        selectedQuery = el;\n      }\n    });\n  }\n\n  const handleFromSubmit = (e) =>{\n    e.preventDefault();\n    let selectedQuery = getSelectedQuery(textAreaRef?.current?.value?.trim().toLowerCase());\n    \n    if(selectedQuery){\n      setQueryData(selectedQuery);\n    }else{\n      //input query does not match then taking default zeroth index table data\n      setQueryData(sqlData[0]);\n    }\n  }\n\n  const handleQueryChange = (query) =>{\n    let selectedQuery = {};\n    sqlData.forEach(el => {\n      if(el.query.toLowerCase() === query.trim().toLowerCase()){\n        selectedQuery = el;\n      }\n    });\n    if(selectedQuery){\n      setQueryData(selectedQuery);\n    }else{\n      //input query does not match then taking default zeroth index table data\n      setQueryData(sqlData[0]);\n    }\n  }\n\n  return (\n      <div className=\"container\">\n           <SQLFrom \n           textAreaRef={textAreaRef}\n           handleFromSubmit={handleFromSubmit}\n           />\n           <QueryToggle \n           sqlData={sqlData}\n           handleQueryChange={handleQueryChange}\n           />\n           <TableData tableData={queryData?.tableData}/>\n      </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}