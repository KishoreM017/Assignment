{"ast":null,"code":"var _jsxFileName = \"/Users/vipl19-20063/Desktop/react-interview/src/App.js\";\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport SQLFrom from '../src/components/SQLFrom/SQLFrom';\nimport TableData from '../src/components/TableData/TableData';\nimport QueryToggle from '../src/components/QueryToggle/QueryToggle';\nimport { sqlData } from '../src/utils/utils';\n\nconst App = props => {\n  const [queryData, setQueryData] = useState({});\n  const textAreaRef = useRef(null);\n\n  const handleFromSubmit = e => {\n    e.preventDefault();\n    let selectedQuery = {};\n    sqlData.forEach(el => {\n      var _textAreaRef$current, _textAreaRef$current$;\n\n      if (el.query.toLowerCase() === (textAreaRef === null || textAreaRef === void 0 ? void 0 : (_textAreaRef$current = textAreaRef.current) === null || _textAreaRef$current === void 0 ? void 0 : (_textAreaRef$current$ = _textAreaRef$current.value) === null || _textAreaRef$current$ === void 0 ? void 0 : _textAreaRef$current$.trim().toLowerCase())) {\n        selectedQuery = el;\n      }\n    });\n\n    if (selectedQuery) {\n      setQueryData(selectedQuery);\n    } else {\n      //input query does not match then taking default zeroth index table data\n      setQueryData(sqlData[0]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SQLFrom, {\n    textAreaRef: textAreaRef,\n    handleFromSubmit: handleFromSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(QueryToggle, {\n    sqlData: sqlData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TableData, {\n    tableData: queryData === null || queryData === void 0 ? void 0 : queryData.tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vipl19-20063/Desktop/react-interview/src/App.js"],"names":["React","useRef","useState","SQLFrom","TableData","QueryToggle","sqlData","App","props","queryData","setQueryData","textAreaRef","handleFromSubmit","e","preventDefault","selectedQuery","forEach","el","query","toLowerCase","current","value","trim","tableData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMS,WAAW,GAAGV,MAAM,CAAC,IAAD,CAA1B;;AACA,QAAMW,gBAAgB,GAAIC,CAAD,IAAM;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,aAAa,GAAG,EAApB;AACAT,IAAAA,OAAO,CAACU,OAAR,CAAgBC,EAAE,IAAI;AAAA;;AACpB,UAAGA,EAAE,CAACC,KAAH,CAASC,WAAT,QAA2BR,WAA3B,aAA2BA,WAA3B,+CAA2BA,WAAW,CAAES,OAAxC,kFAA2B,qBAAsBC,KAAjD,0DAA2B,sBAA6BC,IAA7B,GAAoCH,WAApC,EAA3B,CAAH,EAAgF;AAC9EJ,QAAAA,aAAa,GAAGE,EAAhB;AACD;AACF,KAJD;;AAKA,QAAGF,aAAH,EAAiB;AACfL,MAAAA,YAAY,CAACK,aAAD,CAAZ;AACD,KAFD,MAEK;AACH;AACAL,MAAAA,YAAY,CAACJ,OAAO,CAAC,CAAD,CAAR,CAAZ;AACD;AACF,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,OAAD;AACA,IAAA,WAAW,EAAEK,WADb;AAEA,IAAA,gBAAgB,EAAEC,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,eAKK,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEN,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALL,eAMK,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEG,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEc,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANL,CADJ;AAUD,CA/BD;;AAkCA,eAAehB,GAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport SQLFrom from '../src/components/SQLFrom/SQLFrom';\nimport TableData from '../src/components/TableData/TableData';\nimport QueryToggle from '../src/components/QueryToggle/QueryToggle';\nimport { sqlData } from '../src/utils/utils';\n\nconst App = props => {\n\n  const [queryData, setQueryData] = useState({});\n\n  const textAreaRef = useRef(null);\n  const handleFromSubmit = (e) =>{\n    e.preventDefault();\n    let selectedQuery = {};\n    sqlData.forEach(el => {\n      if(el.query.toLowerCase() === textAreaRef?.current?.value?.trim().toLowerCase()){\n        selectedQuery = el;\n      }\n    });\n    if(selectedQuery){\n      setQueryData(selectedQuery);\n    }else{\n      //input query does not match then taking default zeroth index table data\n      setQueryData(sqlData[0]);\n    }\n  }\n\n  return (\n      <div className=\"container\">\n           <SQLFrom \n           textAreaRef={textAreaRef}\n           handleFromSubmit={handleFromSubmit}\n           />\n           <QueryToggle sqlData={sqlData}/>\n           <TableData tableData={queryData?.tableData}/>\n      </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}