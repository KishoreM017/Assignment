{"ast":null,"code":"var _jsxFileName = \"/Users/vipl19-20063/Desktop/react-interview/src/App.js\";\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { showMyLearningToolTip } from '../src/store/reduxTest/ReduxTestActions';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport reducer from '../src/store/reducer';\nimport axios from 'axios';\n\nconst App = props => {\n  const [mainCategory, setMainCategory] = useState(null);\n  const [childSubCategories, setChildSubCategories] = useState(null);\n  const [state, dispatch] = useReducer(reducer, {\n    showMyLearningTooltip: false\n  }); // console.log(\"state: \", state);\n  // const dispatch = useDispatch();\n  // let showMyLearningToolTip = useSelector(state => state.myLearningToolTip.showMyLearningTooltip);\n\n  const getCategories = async url => {\n    try {\n      var _resp$data;\n\n      let resp = await axios.get(url);\n\n      if (resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data.data) {\n        return resp.data.data;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getCategories(\"https://60891feca6f4a30017427aa2.mockapi.io/api/v1/ftask/categories\").then(categories => {\n      var _category$sub_categor;\n\n      let category = categories[0];\n      let subCategoryDummyIds = [];\n      let promisesArray = [];\n\n      if ((category === null || category === void 0 ? void 0 : (_category$sub_categor = category.sub_categories) === null || _category$sub_categor === void 0 ? void 0 : _category$sub_categor.length) > 0) {\n        category.sub_categories.forEach(el => {\n          subCategoryDummyIds.push(el.dummy_id);\n        });\n\n        if ((subCategoryDummyIds === null || subCategoryDummyIds === void 0 ? void 0 : subCategoryDummyIds.length) > 0) {\n          subCategoryDummyIds.forEach(id => {\n            let url = \"https://60891feca6f4a30017427aa2.mockapi.io/api/v1/ftask/\" + id;\n            promisesArray.push(getCategories(url));\n          });\n\n          if (promisesArray.length > 0) {\n            Promise.all(promisesArray).then(results => {\n              setChildSubCategories(results);\n            });\n          }\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Kishore\");\n};\n\nconst mapStateToProps = state => ({\n  showMyLearningTooltip: state.showMyLearningTooltip\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showMyLearningToolTip: value => dispatch(showMyLearningToolTip(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/vipl19-20063/Desktop/react-interview/src/App.js"],"names":["React","useEffect","useReducer","useState","connect","showMyLearningToolTip","useSelector","useDispatch","reducer","axios","App","props","mainCategory","setMainCategory","childSubCategories","setChildSubCategories","state","dispatch","showMyLearningTooltip","getCategories","url","resp","get","data","err","console","log","then","categories","category","subCategoryDummyIds","promisesArray","sub_categories","length","forEach","el","push","dummy_id","id","Promise","all","results","mapStateToProps","mapDispatchToProps","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { showMyLearningToolTip } from '../src/store/reduxTest/ReduxTestActions';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport  reducer  from '../src/store/reducer';\nimport axios from 'axios';\n  \nconst App = props => {\n\n  const [mainCategory, setMainCategory] = useState(null);\n  const [childSubCategories, setChildSubCategories] = useState(null);\n  const [state, dispatch] = useReducer(reducer, {\n    showMyLearningTooltip: false \n})\n// console.log(\"state: \", state);\n  // const dispatch = useDispatch();\n  // let showMyLearningToolTip = useSelector(state => state.myLearningToolTip.showMyLearningTooltip);\n\n  const getCategories = async (url) =>{\n    try{\n      let resp = await axios.get(url);\n      if(resp?.data?.data){\n        return resp.data.data;\n      }\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n      getCategories(\"https://60891feca6f4a30017427aa2.mockapi.io/api/v1/ftask/categories\").then(categories =>{\n        let category = categories[0];\n        let subCategoryDummyIds = [];\n        let promisesArray = [];\n        if(category?.sub_categories?.length > 0){\n          category.sub_categories.forEach(el => {\n          subCategoryDummyIds.push(el.dummy_id);\n          });\n        if(subCategoryDummyIds?.length > 0){\n          subCategoryDummyIds.forEach(id =>{\n            let url = \"https://60891feca6f4a30017427aa2.mockapi.io/api/v1/ftask/\" +id\n            promisesArray.push(getCategories(url));\n          });\n          if(promisesArray.length > 0){\n            Promise.all(promisesArray).then(results =>{\n              setChildSubCategories(results);\n            })\n          }\n        }\n        }\n      })\n  }, [])\n  return (\n\n        <div className=\"App\">\n          Kishore\n        </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  showMyLearningTooltip : state.showMyLearningTooltip\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showMyLearningToolTip: value => dispatch(showMyLearningToolTip(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}