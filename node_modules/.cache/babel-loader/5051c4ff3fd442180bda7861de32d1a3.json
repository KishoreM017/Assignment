{"ast":null,"code":"var _jsxFileName = \"/Users/vipl19-20063/Desktop/react-interview/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { showMyLearningToolTip } from '../src/store/reduxTest/ReduxTestActions';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useReducer } from 'react';\n\nconst App = props => {\n  const dispatch = useDispatch();\n  let showMyLearningToolTip = useSelector(state => state.myLearningToolTip.showMyLearningTooltip);\n  console.log(\"tesst\", showMyLearningToolTip);\n  useEffect(() => {\n    dispatch(showMyLearningToolTip(true));\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Kishore\");\n};\n\nconst mapStateToProps = state => ({\n  showMyLearningTooltip: state.showMyLearningTooltip\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showMyLearningToolTip: value => dispatch(showMyLearningToolTip(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/vipl19-20063/Desktop/react-interview/src/App.js"],"names":["React","useEffect","connect","showMyLearningToolTip","useSelector","useDispatch","useReducer","App","props","dispatch","state","myLearningToolTip","showMyLearningTooltip","console","log","mapStateToProps","mapDispatchToProps","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,yCAAtC;AACA,OAAO,WAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAIF,qBAAqB,GAAGC,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,iBAAN,CAAwBC,qBAAlC,CAAvC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,qBAArB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACN,qBAAqB,CAAC,IAAD,CAAtB,CAAR;AACD,GAFQ,EAEN,CAACK,KAAD,CAFM,CAAT;AAGA,sBAEM;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFN;AAMD,CAdD;;AAiBA,MAAMO,eAAe,GAAGL,KAAK,KAAK;AAChCE,EAAAA,qBAAqB,EAAGF,KAAK,CAACE;AADE,CAAL,CAA7B;;AAIA,MAAMI,kBAAkB,GAAGP,QAAQ,KAAK;AACtCN,EAAAA,qBAAqB,EAAEc,KAAK,IAAIR,QAAQ,CAACN,qBAAqB,CAACc,KAAD,CAAtB;AADF,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAACa,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { showMyLearningToolTip } from '../src/store/reduxTest/ReduxTestActions';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useReducer } from 'react';\n  \nconst App = props => {\n\n  const dispatch = useDispatch();\n  let showMyLearningToolTip = useSelector(state => state.myLearningToolTip.showMyLearningTooltip);\n  console.log(\"tesst\", showMyLearningToolTip);\n  useEffect(() => {\n    dispatch(showMyLearningToolTip(true))\n  }, [props])\n  return (\n\n        <div className=\"App\">\n          Kishore\n        </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  showMyLearningTooltip : state.showMyLearningTooltip\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showMyLearningToolTip: value => dispatch(showMyLearningToolTip(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}