{"ast":null,"code":"var _jsxFileName = \"/Users/vipl19-20063/Desktop/react-interview/src/App.js\";\nimport React, { useEffect, useReducer } from 'react';\nimport { connect } from 'react-redux';\nimport { showMyLearningToolTip } from '../src/store/reduxTest/ReduxTestActions';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport reducer from '../src/store/reducer';\n\nconst App = props => {\n  const [state, dispatch] = useReducer(reducer, {\n    showMyLearningTooltip: false\n  });\n  console.log(\"state: \", state); // const dispatch = useDispatch();\n\n  let showMyLearningToolTip = useSelector(state => state.myLearningToolTip.showMyLearningTooltip);\n  useEffect(() => {\n    dispatch(showMyLearningToolTip(true));\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Kishore\");\n};\n\nconst mapStateToProps = state => ({\n  showMyLearningTooltip: state.showMyLearningTooltip\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showMyLearningToolTip: value => dispatch(showMyLearningToolTip(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/vipl19-20063/Desktop/react-interview/src/App.js"],"names":["React","useEffect","useReducer","connect","showMyLearningToolTip","useSelector","useDispatch","reducer","App","props","state","dispatch","showMyLearningTooltip","console","log","myLearningToolTip","mapStateToProps","mapDispatchToProps","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,yCAAtC;AACA,OAAO,WAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAQC,OAAR,MAAsB,sBAAtB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACK,OAAD,EAAU;AAC5CK,IAAAA,qBAAqB,EAAE;AADqB,GAAV,CAApC;AAGFC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB,EALqB,CAMnB;;AACA,MAAIN,qBAAqB,GAAGC,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACK,iBAAN,CAAwBH,qBAAlC,CAAvC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACP,qBAAqB,CAAC,IAAD,CAAtB,CAAR;AACD,GAFQ,EAEN,CAACK,KAAD,CAFM,CAAT;AAGA,sBAEM;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFN;AAMD,CAjBD;;AAoBA,MAAMO,eAAe,GAAGN,KAAK,KAAK;AAChCE,EAAAA,qBAAqB,EAAGF,KAAK,CAACE;AADE,CAAL,CAA7B;;AAIA,MAAMK,kBAAkB,GAAGN,QAAQ,KAAK;AACtCP,EAAAA,qBAAqB,EAAEc,KAAK,IAAIP,QAAQ,CAACP,qBAAqB,CAACc,KAAD,CAAtB;AADF,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAACa,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf","sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport { connect } from 'react-redux';\nimport { showMyLearningToolTip } from '../src/store/reduxTest/ReduxTestActions';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport  reducer  from '../src/store/reducer';\n  \nconst App = props => {\n\n  const [state, dispatch] = useReducer(reducer, {\n    showMyLearningTooltip: false \n})\nconsole.log(\"state: \", state);\n  // const dispatch = useDispatch();\n  let showMyLearningToolTip = useSelector(state => state.myLearningToolTip.showMyLearningTooltip);\n  useEffect(() => {\n    dispatch(showMyLearningToolTip(true))\n  }, [props])\n  return (\n\n        <div className=\"App\">\n          Kishore\n        </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  showMyLearningTooltip : state.showMyLearningTooltip\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showMyLearningToolTip: value => dispatch(showMyLearningToolTip(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}