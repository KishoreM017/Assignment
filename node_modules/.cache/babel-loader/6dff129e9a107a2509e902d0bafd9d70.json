{"ast":null,"code":"var _jsxFileName = \"/Users/vipl19-20063/Desktop/react-interview/src/App.js\";\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport SQLFrom from '../src/components/SQLFrom/SQLFrom';\nimport { data } from '../src/utils/utils';\n\nconst App = props => {\n  const [queryData, setQueryData] = useState({});\n  const textAreaRef = useRef(null);\n\n  const handleFromSubmit = e => {\n    e.preventDefault();\n    let selectedQuery = {};\n    data.forEach(el => {\n      var _textAreaRef$current;\n\n      if (el.query === (textAreaRef === null || textAreaRef === void 0 ? void 0 : (_textAreaRef$current = textAreaRef.current) === null || _textAreaRef$current === void 0 ? void 0 : _textAreaRef$current.value)) {\n        selectedQuery = el;\n      } else {\n        selectedQuery = el;\n      }\n\n      setQueryData(el);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SQLFrom, {\n    textAreaRef: textAreaRef,\n    handleFromSubmit: handleFromSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vipl19-20063/Desktop/react-interview/src/App.js"],"names":["React","useRef","useState","SQLFrom","data","App","props","queryData","setQueryData","textAreaRef","handleFromSubmit","e","preventDefault","selectedQuery","forEach","el","query","current","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMO,WAAW,GAAGR,MAAM,CAAC,IAAD,CAA1B;;AACA,QAAMS,gBAAgB,GAAIC,CAAD,IAAM;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,aAAa,GAAG,EAApB;AACAT,IAAAA,IAAI,CAACU,OAAL,CAAaC,EAAE,IAAI;AAAA;;AACjB,UAAGA,EAAE,CAACC,KAAH,MAAaP,WAAb,aAAaA,WAAb,+CAAaA,WAAW,CAAEQ,OAA1B,yDAAa,qBAAsBC,KAAnC,CAAH,EAA4C;AAC1CL,QAAAA,aAAa,GAAGE,EAAhB;AACD,OAFD,MAEK;AACHF,QAAAA,aAAa,GAAGE,EAAhB;AACD;;AACDP,MAAAA,YAAY,CAACO,EAAD,CAAZ;AACD,KAPD;AASD,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,OAAD;AACA,IAAA,WAAW,EAAEN,WADb;AAEA,IAAA,gBAAgB,EAAEC,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADJ;AAQD,CA3BD;;AA8BA,eAAeL,GAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport SQLFrom from '../src/components/SQLFrom/SQLFrom';\nimport { data } from '../src/utils/utils';\n\nconst App = props => {\n\n  const [queryData, setQueryData] = useState({});\n\n  const textAreaRef = useRef(null);\n  const handleFromSubmit = (e) =>{\n    e.preventDefault();\n    let selectedQuery = {};\n    data.forEach(el => {\n      if(el.query === textAreaRef?.current?.value){\n        selectedQuery = el;\n      }else{\n        selectedQuery = el;\n      }\n      setQueryData(el);\n    });\n    \n  }\n\n  return (\n      <div className=\"container\">\n           <SQLFrom \n           textAreaRef={textAreaRef}\n           handleFromSubmit={handleFromSubmit}\n           /> \n      </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}